{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package omw-1.4 to\n",
      "[nltk_data]     C:\\Users\\lalme\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package omw-1.4 is already up-to-date!\n"
     ]
    }
   ],
   "source": [
    "GENIUS_API_TOKEN='hgHXjEpkYI85Ud6Bw2LWCwrLlYcznI3pjq0NANvSq7fDkG6Pvb9qi06S7HnJVDCs'\n",
    "\n",
    "# Make HTTP requests\n",
    "import requests\n",
    "# Scrape data from an HTML document\n",
    "from bs4 import BeautifulSoup, Tag\n",
    "# I/O\n",
    "import os\n",
    "# Search and manipulate strings\n",
    "import re\n",
    "import shutil\n",
    "from nrclex import NRCLex\n",
    "import text2emotion as te\n",
    "import nltk\n",
    "nltk.download('omw-1.4')\n",
    "\n",
    "# Data analyses\n",
    "import pandas as pd \n",
    "# MongoDB Configuratin\n",
    "import pymongo\n",
    "from pymongo import MongoClient\n",
    "cluster = pymongo.MongoClient(\"mongodb+srv://luna-admin:1234@cluster0.sbx0f.mongodb.net/emotion_recognition?retryWrites=true&w=majority\")\n",
    "db = cluster[\"emotion_recognition\"]\n",
    "collection = db[\"artists\"]\n",
    "\n",
    "content = {}\n",
    "lyrics_list = []\n",
    "emotion_list = []\n",
    "\n",
    "# Get artist object from Genius API\n",
    "def request_artist_info(artist_name, page):\n",
    "    base_url = 'https://api.genius.com'\n",
    "    headers = {'Authorization': 'Bearer ' + GENIUS_API_TOKEN}\n",
    "    search_url = base_url + '/search?per_page=10&page=' + str(page)\n",
    "    data = {'q': artist_name}\n",
    "    response = requests.get(search_url, data=data, headers=headers)\n",
    "    return response\n",
    "\n",
    "# Get Genius.com song url's from artist object\n",
    "def request_song_url(artist_name, song_cap):\n",
    "    page = 1\n",
    "    songs = []\n",
    "    \n",
    "    while True:\n",
    "        response = request_artist_info(artist_name, page)\n",
    "        json = response.json()\n",
    "        # Collect up to song_cap song objects from artist\n",
    "        song_info = []\n",
    "        for hit in json['response']['hits']:\n",
    "            if artist_name.lower() in hit['result']['primary_artist']['name'].lower():\n",
    "                song_info.append(hit)\n",
    "    \n",
    "        # Collect song URL's from song objects\n",
    "        for song in song_info:\n",
    "            if (len(songs) < song_cap):\n",
    "                url = song['result']['url']\n",
    "                songs.append(url)\n",
    "            \n",
    "        if (len(songs) == song_cap):\n",
    "            break\n",
    "        else:\n",
    "            page += 1\n",
    "        \n",
    "    print('Found {} songs by {}'.format(len(songs), artist_name))\n",
    "    return songs\n",
    "\n",
    "# Scrape lyrics from a Genius.com song URL\n",
    "def scrape_song_lyrics(url, artist_name):\n",
    "    page = requests.get(url)\n",
    "    html = BeautifulSoup(page.text, 'html.parser')\n",
    "    extractedLyrics = html.find('div', id='lyrics-root')\n",
    "    if(extractedLyrics):\n",
    "        artist_name = html.find('h2').get_text()\n",
    "        lyricsArray = extractedLyrics.contents\n",
    "        del lyricsArray[-1]\n",
    "        formattedLyrics = ''\n",
    "        for x in lyricsArray:\n",
    "            if(len(x.contents) > 0):\n",
    "                stringsContent = list(x.strings)\n",
    "                formattedStringsContent = list(dict.fromkeys(stringsContent))\n",
    "                for y in formattedStringsContent:\n",
    "                    if(y[0] != '['):\n",
    "                        txt2EmotionEmotions = te.get_emotion(y)\n",
    "                        nrcLexEmotions = NRCLex(y)\n",
    "                        emotionStr = ''\n",
    "                        for x in nrcLexEmotions.top_emotions:\n",
    "                            if(x[1] != 0):\n",
    "                                emotionStr = x[0]\n",
    "                            else:\n",
    "                                for key in txt2EmotionEmotions:\n",
    "                                    if(txt2EmotionEmotions[key] != 0):\n",
    "                                        emotionStr = key\n",
    "                        if(len(emotionStr) > 0):\n",
    "                            if(emotionStr.lower() == 'sadness'):\n",
    "                                emotionStr = 'sad'\n",
    "                            if(emotionStr.lower() == 'anger'):\n",
    "                                emotionStr = 'angry'\n",
    "                            lyrics_list.append(y)\n",
    "                            emotion_list.append(emotionStr.lower())\n",
    "        content = {\"content\": lyrics_list, \"emotion\": emotion_list}\n",
    "        return content\n",
    "    else:\n",
    "        return\n",
    "\n",
    "def Save_artist_on_DB(name, lyrics):\n",
    "    doc = {\n",
    "        \"name\": name.lower(),\n",
    "        \"data\": lyrics\n",
    "    }\n",
    "    collection.insert_one(doc)\n",
    "    db_to_Dataframe(name.lower())\n",
    "\n",
    "def write_lyrics_to_file(artist_name, song_count):\n",
    "    content = {}\n",
    "    lyrics_list = []\n",
    "    emotion_list = []\n",
    "    urls = request_song_url(artist_name, song_count)\n",
    "    for url in urls:\n",
    "        lyrics = scrape_song_lyrics(url, artist_name)\n",
    "    Save_artist_on_DB(artist_name, lyrics)\n",
    "\n",
    "def db_to_Dataframe(artist_name):\n",
    "    cursor = collection.find({\"name\": artist_name}).sort(\"content\")\n",
    "    separate_data = {}\n",
    "    verse = []\n",
    "    emotions = []\n",
    "\n",
    "    for x in cursor:\n",
    "        separate_data = x['data']\n",
    "        verse = separate_data['content']\n",
    "        emotions = separate_data['emotion']\n",
    "    df = pd.DataFrame({'Verse': verse, 'Emotion':emotions})\n",
    "    return df\n",
    "\n",
    "def musicData(artist_name):\n",
    "    if(collection.count_documents({\"name\":artist_name.lower()}) > 0):\n",
    "        return db_to_Dataframe(artist_name.lower())\n",
    "    else:\n",
    "        count = 100\n",
    "        write_lyrics_to_file(artist_name, count)\n",
    "        return db_to_Dataframe(artist_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 100 songs by blink-182\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Verse</th>\n",
       "      <th>Emotion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>I Miss You Lyrics</td>\n",
       "      <td>sad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>I miss you, I miss you</td>\n",
       "      <td>sad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>The angel from my nightmare</td>\n",
       "      <td>anticipation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>The shadow in the background of the morgue</td>\n",
       "      <td>disgust</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>The unsuspecting victim</td>\n",
       "      <td>sad</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        Verse       Emotion\n",
       "0                           I Miss You Lyrics           sad\n",
       "1                      I miss you, I miss you           sad\n",
       "2                 The angel from my nightmare  anticipation\n",
       "3  The shadow in the background of the morgue       disgust\n",
       "4                     The unsuspecting victim           sad"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = musicData(\"blink-182\")\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Verse</th>\n",
       "      <th>Emotion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2347</td>\n",
       "      <td>2347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>1916</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Get away</td>\n",
       "      <td>sad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>3</td>\n",
       "      <td>548</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Verse Emotion\n",
       "count       2347    2347\n",
       "unique      1916      11\n",
       "top     Get away     sad\n",
       "freq           3     548"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "from matplotlib import pyplot as plt\n",
    "import numpy as np \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Analisando os dados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "emotion_count = df['Emotion'].value_counts()\n",
    "emotion_count\n",
    "\n",
    "name = emotion_count.index.tolist()\n",
    "number = emotion_count.to_list()\n",
    "\n",
    "explode = (0.1, 0.0, 0.2, 0.3, 0.0, 0.0, 0.1, 0.4, 0.1, 0.2, 0.0)\n",
    "colors = ( \"orange\", \"cyan\", \"brown\", \"grey\", \"indigo\", \"beige\", \"Yellow\", \"Purple\", \"Pink\", \"Red\", \"Green\")\n",
    "wp = { 'linewidth' : 2, 'edgecolor' : \"green\" }\n",
    "\n",
    "def func(pct, allvalues): \n",
    "    absolute = int(pct / 100.*np.sum(allvalues)) \n",
    "    return \"{:.1f}%\\n({:d} g)\".format(pct, absolute)\n",
    "\n",
    "fig, ax = plt.subplots(figsize =(10, 7))\n",
    "\n",
    "wedges, texts, autotexts = ax.pie(number,  \n",
    "                                  autopct = lambda pct: func(pct, number), \n",
    "                                  explode = explode,  \n",
    "                                  labels = name, \n",
    "                                  shadow = True, \n",
    "                                  colors = colors, \n",
    "                                  startangle = 90, \n",
    "                                  wedgeprops = wp, \n",
    "                                  textprops = dict(color =\"black\"))\n",
    "\n",
    "ax.legend(wedges, number, \n",
    "          title =\"Percentage of Emotions\", \n",
    "          loc =\"center left\", \n",
    "          bbox_to_anchor =(1, 0, 0.5, 1))\n",
    "\n",
    "plt.setp(autotexts, size = 8, weight =\"bold\") \n",
    "plt.show() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Pré - processamento"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt to\n",
      "[nltk_data]     C:\\Users\\lalme\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package punkt is already up-to-date!\n",
      "[nltk_data] Downloading package stopwords to\n",
      "[nltk_data]     C:\\Users\\lalme\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package stopwords is already up-to-date!\n",
      "[nltk_data] Downloading package wordnet to\n",
      "[nltk_data]     C:\\Users\\lalme\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package wordnet is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from string import punctuation\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "nltk.download('punkt')\n",
    "nltk.download('stopwords')\n",
    "nltk.download('wordnet')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Createtoken(Analysed_lyrics):\n",
    "    words = nltk.word_tokenize(Analysed_lyrics)\n",
    "    return ' '.join(words)\n",
    "\n",
    "def Removestopwords(Analysed_word):\n",
    "    for i in punctuation:\n",
    "        Analysed_word = Analysed_word.replace(i, '')\n",
    "    separated_words=nltk.word_tokenize(Analysed_word)\n",
    "    \n",
    "    okay_words = []\n",
    "    stop = stopwords.words('english')\n",
    "    for each in separated_words:\n",
    "        if each not in stop:\n",
    "            okay_words.append(each.lower())\n",
    "    return ' '.join(okay_words)\n",
    "\n",
    "def WordReduction(Analysed_word):\n",
    "    words = nltk.word_tokenize(Analysed_word)\n",
    "    wnl = WordNetLemmatizer()\n",
    "    new_word = []\n",
    "    for each in words:\n",
    "        new_word.append(wnl.lemmatize(each))\n",
    "    return ' '.join(new_word)\n",
    "\n",
    "def New_lyrics(Analysed_word):\n",
    "    return WordReduction(Removestopwords(Createtoken(Analysed_word)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Verse</th>\n",
       "      <th>Emotion</th>\n",
       "      <th>Clean Lyrics</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>I walked through the door with you, the air wa...</td>\n",
       "      <td>negative</td>\n",
       "      <td>i walked door air cold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>But somethin' 'bout it felt like home somehow</td>\n",
       "      <td>Sad</td>\n",
       "      <td>but somethin bout felt like home somehow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>sweet disposition</td>\n",
       "      <td>anticipation</td>\n",
       "      <td>sweet disposition</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>and my wide-eyed gaze</td>\n",
       "      <td>Surprise</td>\n",
       "      <td>wideeyed gaze</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>We're singin' in the car, getting lost upstate</td>\n",
       "      <td>sadness</td>\n",
       "      <td>we singin car getting lost upstate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               Verse       Emotion  \\\n",
       "0  I walked through the door with you, the air wa...      negative   \n",
       "1      But somethin' 'bout it felt like home somehow           Sad   \n",
       "2                                  sweet disposition  anticipation   \n",
       "3                              and my wide-eyed gaze      Surprise   \n",
       "4     We're singin' in the car, getting lost upstate       sadness   \n",
       "\n",
       "                               Clean Lyrics  \n",
       "0                    i walked door air cold  \n",
       "1  but somethin bout felt like home somehow  \n",
       "2                         sweet disposition  \n",
       "3                             wideeyed gaze  \n",
       "4        we singin car getting lost upstate  "
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Clean Lyrics'] = df['Verse'].apply(lambda x: New_lyrics(x))\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "523e72497fe4c2ae1d8442d2bebd09868d4529295f04c8f9227b9651ac240e9f"
  },
  "kernelspec": {
   "display_name": "Python 3.10.2 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.2"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
